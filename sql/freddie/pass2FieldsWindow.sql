// this field list is used if there is a window key in the .gom file
// these are fields from pass1 that carry over to the sample2 table
dateDiff('month', s.aoDt, trgDt) AS fcstMonth,
s.msaLoc,
s.aoDt,
s.aoAge,
s.aoDq,
s.aoDqCap6,
s.aoUpb,
s.aoMod,
s.hasSecond,
s.coBorr,
s.pPen36,
s.servicer,
s.aoMaxDq12,
s.aoMonthsCur,
s.aoTimes30,
s.aoTimes60,
s.aoTimes90p,
s.aoPrior30,
s.aoPrior60,
aoPrior90p,
s.aoPayment,
s.aoRate,
s.aoZb,
s.noGroups,
toInt32(<window>) AS window,
dateAdd(month, window, aoDt) AS trgDt,
aoAge + window AS trgAge,
indexOf(monthly.month, aoDt) AS fIndex,
indexOf(monthly.month, dateAdd(month, window, aoDt)) = 0 ? length(monthly.month) : indexOf(monthly.month, dateAdd(month, window, aoDt)) AS lIndex,
aoAge + lIndex - fIndex AS endAge,
arrayElement(monthly.zb, lIndex) AS trgZb,
arrayElement(monthly.curRate, lIndex) = 0 ? aoRate : arrayElement(monthly.curRate, lIndex) AS trgRate,


s.aoUpb * pow(1.0 + s.aoR, window) - s.aoPayment * (pow(1.0 + s.aoR, window) - 1.0) / s.aoR AS trgUpbExp,
aoRate > 0 ? aoRate / 1200.0 : 0.01 / 1200.0 AS trgR,
term - trgAge AS trgRemTerm,
aoRate > 0 ? trgR * trgUpbExp / (1.0 - pow(1.0 + trgR, (-trgRemTerm))) : aoR * trgUpbExp / (1.0 - pow(1.0 + s.aoR, (-trgRemTerm)))  AS trgPayment,

concat(toString(year(trgDt)), 'Q', toString(quarter(trgDt))) AS trgYrQtr,
year(trgDt)>=2019 ? toString(year(trgDt)) : 'Before 2019' AS periods,
dateDiff('month', toDate('2020-04-01'),trgDt) >= 0 AND dateDiff('month', toDate('2022-04-01'),trgDt) <= 0 ? 'Y' : 'N' AS covid,

indexOf(monthly.month, aoDt) AS fIndex,
indexOf(monthly.month, dateAdd(month, window, aoDt)) = 0 ? length(monthly.month) : indexOf(monthly.month, dateAdd(month, window, aoDt)) AS lIndex,
aoAge + lIndex - fIndex AS endAge,
toInt32(arrayMax(arraySlice(arrayMap(x -> x = '01' ? 1 : 0, monthly.zb), fIndex, lIndex-fIndex+1))) AS targetPp,
toInt32(arrayMax(arraySlice(arrayMap(x -> x in ('03', '09') ? 1 : 0, monthly.zb), fIndex, lIndex-fIndex+1))) AS targetDefault,
toInt32(arrayMax(arraySlice(arrayMap(x -> x >= 4 ? 1 : 0, monthly.dq), fIndex, lIndex-fIndex+1))) AS targetDq120,
toInt32(arrayMax(arraySlice(arrayMap(x -> x = 'Y' ? 1 : 0, monthly.mod), fIndex, lIndex-fIndex+1))) AS targetMod

